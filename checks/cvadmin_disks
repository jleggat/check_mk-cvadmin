#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<cvadmin_disks>>>
# VOLUME     on device:rdisk18	sectors: 7324197855  sector size: 512


def inventory_cvadmin_disks(checkname, info):
    inventory = []
    params = {}
    for line in info:
		params = {}
		params["sectors"] = list_get_next(line, "sectors:")
		params["sector_size"] = list_get_next(line, "size:")
		inventory.append( (line[0], params) )
    return inventory


def check_cvadmin_disks(item, params, info):
    for line in info:
    	if line[0] == item:
			infotext = [line[2].partition(':')[2]]
			worst_state = 0
			sectors = list_get_next(line, "sectors:")
			sector_size = list_get_next(line, "size:")

			if sectors != params["sectors"]:
				infotext.append( "Sectors -- Expected %s Found" % params["sectors"] )
				worst_state = max(worst_state, 2)
			infotext.append( "%s Sectors" % sectors )
			if sector_size != params["sector_size"]:
				infotext.append( "Sector Size -- Expected %s Found" %  params["sector_size"] )
				worst_state = max(worst_state, 2)
			infotext.append( "%s Sector Size" % sector_size )

			if worst_state == 2:
				infotext[-1] += "(!!)"

			return worst_state, ", ".join(infotext)

    return 3, "No disk %s found" % item


check_info["cvadmin_disks"] = {
	'check_function':			check_cvadmin_disks,
	'inventory_function':		inventory_cvadmin_disks,
	"service_description":		"CVADMIN Disk %s",
    "includes"                : [ "cvadmin.include" ],
    "group"                   : "filesystem",
}
