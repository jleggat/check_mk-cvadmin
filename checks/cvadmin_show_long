#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<cvadmin_show_long>>>
# VOLUME Stripe Group 0 [MetadataAndJournal]  Status:Up,MetaData,Journal,Exclusive   Total Blocks:45775744 (698.48 GB)  Reserved:0 (0.00 B) Free:45680420 (697.03 GB) (99%)   MultiPath Method:Rotate     Primary  Stripe [MetadataAndJournal]  Read:Enabled  Write:Enabled
# VOLUME Stripe Group 1 [Video-1]  Status:Up   Total Blocks:1098630080 (16.37 TB)  Reserved:270720 (4.13 GB) Free:379663753 (5.66 TB) (34%)   MultiPath Method:Rotate     Primary  Stripe [Video-2]  Read:Enabled  Write:Enabled


def inventory_cvadmin_show_long(checkname, info):
	inventory = []
	for line in info:
		params = {}
		params["index"] = line[3]
		params["status"] = line[5].partition(':')[2]
		params["blocks"] = line[7].partition(':')[2]
		params["reserved"] = line[10].partition(':')[2]
		params["method"] = line[18].partition(':')[2]
		params["read"] = line[22].partition(':')[2]
		params["write"] = line[23].partition(':')[2]
		inventory.append( ( "_".join( [line[0], line[4].translate(None, '[]')] ), params ) )
	return inventory


def check_cvadmin_show_long(item, params, info):
    for line in info:
    	name = "_".join( [line[0], line[4].translate(None, '[]')] )
    	if name == item:
			infotext = []
			worst_state = 0

			index = line[3]
			status = line[5].partition(':')[2]
			blocks = line[7].partition(':')[2]
			reserved = line[10].partition(':')[2]
			method = line[18].partition(':')[2]
			read = line[22].partition(':')[2]
			write = line[23].partition(':')[2]

			infotext.append( "Status %s" % status )
			if status != params["status"]:
				infotext.append( "%s Expected" % params["status"] )
				worst_state = max(worst_state, 2)

			infotext.append( "Read: %s" % read )
			if read != params["read"]:
				infotext.append( "Expected %s" % params["read"] )
				worst_state = max(worst_state, 1)

			infotext.append( "Write: %s" % write )
			if write != params["write"]:
				infotext.append( "Expected %s" % params["write"] )
				worst_state = max(worst_state, 1)

			infotext.append( "MultiPath Method: %s" % method )
			if method != params["method"]:
				infotext.append ("Expected: %s" % params["method"] )
				worst_state = max(worst_state, 1)

			if blocks != params["blocks"]:
				infotext.append ("%s Total Blocks but %s expected" % (blocks, params["blocks"]) )
				worst_state = max(worst_state, 1)

			if reserved != params["reserved"]:
				infotext.append ("%s Reserved Blocks but %s expected" % (reserved, params["reserved"]) )
				worst_state = max(worst_state, 1)

			infotext.append( "%s %s" % (line[8], line[9]) )

			if worst_state == 1:
				infotext[-1] += "(!)"
			elif worst_state == 2:
				infotext[-1] += "(!!)"

			return worst_state, ", ".join(infotext)

    return 3, "%s not found" % item


check_info['cvadmin_show_long'] = {
    "inventory_function"      : inventory_cvadmin_show_long,
    "check_function"          : check_cvadmin_show_long,
    "service_description"     : "CVADMIN Stripe Group %s",
    "includes"                : [ "cvadmin.include" ],
    "group"                   : "filesystem",
}
